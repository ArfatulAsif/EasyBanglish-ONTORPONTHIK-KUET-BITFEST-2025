generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      String    @default("user") // Either "user" or "admin"
  createdAt DateTime  @default(now())

  chats     Chat[]
  pdfs      Pdf[]
  analytics Analytics[]
}

model Chat {
  id        Int       @id @default(autoincrement())
  userId    Int
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
}

model Message {
  id        Int       @id @default(autoincrement())
  chatId    Int
  sender    String    // "user" or "bot"
  time      DateTime  @default(now())
  text      String?
  voice     String?   // String URL, either text or voice is provided

  chat      Chat      @relation(fields: [chatId], references: [id])
}

model Pdf {
  id             Int       @id @default(autoincrement())
  userId         Int
  titleBangla    String
  titleBanglish  String
  captionBangla String
  captionBanglish String
  time           DateTime  @default(now())
  tags           String[]
  visibility     String    @default("private") // Either "public" or "private"
  banglaText     String
  mainContent    String

  user           User      @relation(fields: [userId], references: [id])
}

model History {
  id         Int       @id @default(autoincrement())
  operation  String
  tableName  String
  createdAt  DateTime  @default(now())
  details    String
}

model Analytics {
  id              Int       @id @default(autoincrement())
  userId          Int       
  translatedWords Int       @default(0)
  writtenStories  Int       @default(0)
  messageCount    Int       @default(0)

  user            User      @relation(fields: [userId], references: [id])
}
